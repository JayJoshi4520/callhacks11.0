{"ast":null,"code":"var _jsxFileName = \"/Users/jayjoshi/Desktop/CalHacks/uAgents/integrations/google-gemini/src/Forntend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport './css/homePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(0);\n  const [storyText, setStoryText] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [audioSrc, setAudioSrc] = useState([]); // Store decoded audio URL\n  const [isRecording, setIsRecording] = useState(false); // Track if the mic is recording\n  const mediaRecorderRef = useRef(null);\n  const chunks = useRef([]); // To store audio data\n\n  const images = ['/images/7.png', '/images/8.png', '/images/9.png'];\n  useEffect(() => {\n    // Set up the interval to switch the image every 5 seconds (5000 ms)\n    const intervalId = setInterval(() => {\n      setCurrentImage(prevImage => (prevImage + 1) % images.length);\n    }, 5000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n  const BASE_API = \"http://localhost:8000\";\n  const handleNext = () => {\n    if (!isAnimating) {\n      setIsAnimating(true);\n      setTimeout(() => {\n        setCurrentImage(prev => prev === images.length - 1 ? 0 : prev + 1);\n        setIsAnimating(false);\n      }, 500); // Duration of the animation\n    }\n  };\n  const handlePrevious = () => {\n    if (!isAnimating) {\n      setIsAnimating(true);\n      setTimeout(() => {\n        setCurrentImage(prev => prev === 0 ? images.length - 1 : prev - 1);\n        setIsAnimating(false);\n      }, 500); // Duration of the animation\n    }\n  };\n  const handleRecord = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop(); // Stop recording\n      setIsRecording(false);\n    } else {\n      // Request audio access from the user\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        chunks.current = [];\n\n        // Store the data in chunks\n        mediaRecorder.ondataavailable = e => {\n          chunks.current.push(e.data);\n        };\n\n        // When the recording stops\n        mediaRecorder.onstop = () => {\n          const blob = new Blob(chunks.current, {\n            type: \"audio/wav\"\n          });\n          // Send the audio blob to the API\n          sendAudioToAPI(blob);\n        };\n        mediaRecorder.start();\n        setIsRecording(true); // Update state to show that we are recording\n      });\n    }\n  };\n  const convertBlobToBase64 = blob => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1]; // Extract Base64 string without MIME type\n        resolve(base64String);\n      };\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(blob);\n    });\n  };\n  const decodeBase64Audio = base64String => {\n    if (base64String) {\n      const binaryString = atob(base64String);\n      const binaryLen = binaryString.length;\n      const bytes = new Uint8Array(binaryLen);\n      for (let i = 0; i < binaryLen; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      const blob = new Blob([bytes], {\n        type: 'audio/wav'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioSrc([...audioSrc, url]);\n    }\n  };\n  const submitRequest = () => {\n    if (inputText) {\n      axios.post(BASE_API + \"/gemini\", {\n        \"message\": String(inputText)\n      }).then(resGemi => {\n        setStoryText(resGemi.data);\n        axios.post(BASE_API + \"/lmnt\", {\n          \"message\": resGemi.data\n        }).then(resLMNT => {\n          for (let index = 0; index < resLMNT.data.length; index++) {\n            decodeBase64Audio(resLMNT.data[index]);\n          }\n          const audio = new Audio(audioSrc);\n          audio.play();\n          alert(\"Story Generated\");\n        }).catch(e => alert(e));\n      });\n    }\n    setAudioSrc([]);\n  };\n\n  // Function to send the recorded audio blob to an API endpoint\n  const sendAudioToAPI = audioBlob => {\n    convertBlobToBase64(audioBlob).then(base64 => {\n      axios.post(BASE_API + \"/deepgram\", {\n        \"message\": base64\n      }).then(res => {\n        axios.post(BASE_API + \"/gemini\", {\n          \"message\": res.data\n        }).then(resGemi => {\n          setStoryText(resGemi.data);\n          axios.post(BASE_API + \"/lmnt\", {\n            \"message\": resGemi.data\n          }).then(resLMNT => {\n            decodeBase64Audio(resLMNT.data[0]); // Decode Base64 audio from response\n            alert(\"Story Generated\");\n          }).catch(e => alert(e));\n        });\n      });\n    });\n  };\n  const [text, setText] = useState('');\n  const fullText = 'Hello, Welcome to My Website!'; // The full text to be typed\n  const typingSpeed = 100; // Speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      if (index < fullText.length) {\n        setText(prevText => prevText + fullText.charAt(index)); // Add one character at a time\n        index++;\n      } else {\n        clearInterval(intervalId); // Clear interval when done\n      }\n    }, typingSpeed);\n    return () => clearInterval(intervalId); // Clean up the interval on unmount\n  }, [fullText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"typing-text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greeting-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDF99\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Enter the story description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitRequest,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rwQi+T9POpQIO3684c2tmLSQmiE=\");\n_c = App;\nexport default App;\n{/* <div className=\"app-container\">\n <header className=\"app-header\">\n  <h1>Welcome To Story World</h1>\n  <div className=\"input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Input text\"\n      value={inputText}\n      onChange={(e) => setInputText(e.target.value)}\n    />\n    <button className=\"mic-button\" onClick={handleRecord}>\n      {isRecording ? 'üéôÔ∏è' : 'üé§'} {/* Show different icon when recording */}\n//     </button>\n//     <button onClick={submitRequest}>Submit</button>\n//   </div>\n// </header>\n// <main className=\"app-main\">\n//   <div className=\"image-display-box\">\n\n//     <div className=\"main-page\">\n//       <div className={`image-display ${isAnimating ? 'animating' : ''}`}>\n//         <img\n//           className={`image ${isAnimating ? 'animating' : ''}`}\n//           src={images[currentImage]}\n//           alt=\"Carousel\"\n//         />\n//       </div>\n//       <div className=\"story-class\">\n//         {storyText}\n//       </div>\n//       <button className=\"prev-button\" onClick={handlePrevious}>\n//         &#10094;\n//       </button>\n//       <button className=\"next-button\" onClick={handleNext}>\n//         &#10095;\n//       </button>\n//     </div>\n//   </div>\n// </main>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","currentImage","setCurrentImage","storyText","setStoryText","isAnimating","setIsAnimating","audioSrc","setAudioSrc","isRecording","setIsRecording","mediaRecorderRef","chunks","images","intervalId","setInterval","prevImage","length","clearInterval","BASE_API","handleNext","setTimeout","prev","handlePrevious","handleRecord","current","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","ondataavailable","e","push","data","onstop","blob","Blob","type","sendAudioToAPI","start","convertBlobToBase64","Promise","resolve","reject","reader","FileReader","onloadend","base64String","result","split","onerror","error","readAsDataURL","decodeBase64Audio","binaryString","atob","binaryLen","bytes","Uint8Array","i","charCodeAt","url","URL","createObjectURL","submitRequest","post","String","resGemi","resLMNT","index","Audio","play","alert","catch","audioBlob","base64","res","text","setText","fullText","typingSpeed","prevText","charAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/jayjoshi/Desktop/CalHacks/uAgents/integrations/google-gemini/src/Forntend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport './css/homePage.css'\n\n\nconst App = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(0);\n  const [storyText, setStoryText] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [audioSrc, setAudioSrc] = useState([]); // Store decoded audio URL\n  const [isRecording, setIsRecording] = useState(false); // Track if the mic is recording\n  const mediaRecorderRef = useRef(null);\n  const chunks = useRef([]); // To store audio data\n\n\n  const images = [\n    '/images/7.png',\n    '/images/8.png',\n    '/images/9.png',\n  ];\n\n  useEffect(() => {\n    // Set up the interval to switch the image every 5 seconds (5000 ms)\n    const intervalId = setInterval(() => {\n      setCurrentImage((prevImage) => (prevImage + 1) % images.length);\n    }, 5000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n\n  const BASE_API = \"http://localhost:8000\"\n\n\n\n  const handleNext = () => {\n    if (!isAnimating) {\n      setIsAnimating(true);\n      setTimeout(() => {\n        setCurrentImage((prev) => (prev === images.length - 1 ? 0 : prev + 1));\n        setIsAnimating(false);\n      }, 500); // Duration of the animation\n    }\n  };\n\n  const handlePrevious = () => {\n    if (!isAnimating) {\n      setIsAnimating(true);\n      setTimeout(() => {\n        setCurrentImage((prev) => (prev === 0 ? images.length - 1 : prev - 1));\n        setIsAnimating(false);\n      }, 500); // Duration of the animation\n    }\n  };\n\n  const handleRecord = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop(); // Stop recording\n      setIsRecording(false);\n    } else {\n      // Request audio access from the user\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        chunks.current = [];\n\n        // Store the data in chunks\n        mediaRecorder.ondataavailable = (e) => {\n          chunks.current.push(e.data);\n        };\n\n        // When the recording stops\n        mediaRecorder.onstop = () => {\n          const blob = new Blob(chunks.current, { type: \"audio/wav\" });\n          // Send the audio blob to the API\n          sendAudioToAPI(blob);\n        };\n\n        mediaRecorder.start();\n        setIsRecording(true); // Update state to show that we are recording\n      });\n    }\n  };\n\n  const convertBlobToBase64 = (blob) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1]; // Extract Base64 string without MIME type\n        resolve(base64String);\n      };\n      reader.onerror = (error) => reject(error);\n      reader.readAsDataURL(blob);\n    });\n  };\n\n  const decodeBase64Audio = (base64String) => {\n    if (base64String) {\n      const binaryString = atob(base64String);\n      const binaryLen = binaryString.length;\n      const bytes = new Uint8Array(binaryLen);\n\n      for (let i = 0; i < binaryLen; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n\n\n      const blob = new Blob([bytes], { type: 'audio/wav' });\n\n\n      const url = URL.createObjectURL(blob);\n      setAudioSrc([...audioSrc, url]);\n    }\n  };\n\n  const submitRequest = () => {\n    if (inputText) {\n\n      axios.post(BASE_API + \"/gemini\", { \"message\": String(inputText) }).then((resGemi) => {\n        setStoryText(resGemi.data);\n        axios.post(BASE_API + \"/lmnt\", { \"message\": resGemi.data }).then((resLMNT) => {\n          for (let index = 0; index < resLMNT.data.length; index++) {\n            decodeBase64Audio(resLMNT.data[index]);\n          }\n          const audio = new Audio(audioSrc);\n          audio.play();\n          alert(\"Story Generated\");\n\n        }).catch(e => alert(e));\n\n      });\n    }\n\n    setAudioSrc([])\n  };\n\n  // Function to send the recorded audio blob to an API endpoint\n  const sendAudioToAPI = (audioBlob) => {\n    convertBlobToBase64(audioBlob).then((base64) => {\n      axios.post(BASE_API + \"/deepgram\", {\n        \"message\": base64\n      }).then((res) => {\n        axios.post(BASE_API + \"/gemini\", { \"message\": res.data }).then((resGemi) => {\n          setStoryText(resGemi.data);\n          axios.post(BASE_API + \"/lmnt\", { \"message\": resGemi.data }).then((resLMNT) => {\n            decodeBase64Audio(resLMNT.data[0]); // Decode Base64 audio from response\n            alert(\"Story Generated\");\n          }).catch(e => alert(e));\n        });\n      });\n    });\n  };\n  const [text, setText] = useState('');\n  const fullText = 'Hello, Welcome to My Website!'; // The full text to be typed\n  const typingSpeed = 100; // Speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      if (index < fullText.length) {\n        setText((prevText) => prevText + fullText.charAt(index)); // Add one character at a time\n        index++;\n      } else {\n        clearInterval(intervalId); // Clear interval when done\n      }\n    }, typingSpeed);\n\n    return () => clearInterval(intervalId); // Clean up the interval on unmount\n  }, [fullText]);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"typing-container\">\n        <h1 className=\"typing-text\">{text}</h1>\n      </div>\n      <div className=\"greeting-page-container\">\n        <h1>üéôÔ∏è</h1>\n        <input type=\"text\" onChange={(e) => setInputText(e.target.value)} placeholder=\"Enter the story description\" />\n        <button onClick={submitRequest}>Submit</button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n{/* <div className=\"app-container\">\n<header className=\"app-header\">\n  <h1>Welcome To Story World</h1>\n  <div className=\"input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Input text\"\n      value={inputText}\n      onChange={(e) => setInputText(e.target.value)}\n    />\n    <button className=\"mic-button\" onClick={handleRecord}>\n      {isRecording ? 'üéôÔ∏è' : 'üé§'} {/* Show different icon when recording */}\n//     </button>\n//     <button onClick={submitRequest}>Submit</button>\n//   </div>\n// </header>\n// <main className=\"app-main\">\n//   <div className=\"image-display-box\">\n\n\n\n\n//     <div className=\"main-page\">\n//       <div className={`image-display ${isAnimating ? 'animating' : ''}`}>\n//         <img\n//           className={`image ${isAnimating ? 'animating' : ''}`}\n//           src={images[currentImage]}\n//           alt=\"Carousel\"\n//         />\n//       </div>\n//       <div className=\"story-class\">\n//         {storyText}\n//       </div>\n//       <button className=\"prev-button\" onClick={handlePrevious}>\n//         &#10094;\n//       </button>\n//       <button className=\"next-button\" onClick={handleNext}>\n//         &#10095;\n//       </button>\n//     </div>\n//   </div>\n// </main>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}