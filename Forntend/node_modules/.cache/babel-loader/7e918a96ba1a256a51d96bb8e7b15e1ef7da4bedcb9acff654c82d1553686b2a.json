{"ast":null,"code":"var _jsxFileName = \"/Users/jayjoshi/Desktop/CalHacks/uAgents/integrations/google-gemini/src/Forntend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport './css/homePage.css';\nimport { isVisible } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(0);\n  const [storyText, setStoryText] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [audioSrc, setAudioSrc] = useState([]); // Store decoded audio URL\n  const [isRecording, setIsRecording] = useState(false); // Track if the mic is recording\n  const mediaRecorderRef = useRef(null);\n  const chunks = useRef([]); // To store audio data\n  const [readyState, setreadyState] = useState(false);\n  const [isMainVisible, setisMainVisible] = useState(true);\n  const images = ['/images/7.png', '/images/8.png', '/images/9.png'];\n  useEffect(() => {\n    // Set up the interval to switch the image every 5 seconds (5000 ms)\n    const intervalId = setInterval(() => {\n      setCurrentImage(prevImage => (prevImage + 1) % images.length);\n    }, 5000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n  const BASE_API = \"http://localhost:8000\";\n\n  // const handleNext = () => {\n  //   if (!isAnimating) {\n  //     setIsAnimating(true);\n  //     setTimeout(() => {\n  //       setCurrentImage((prev) => (prev === images.length - 1 ? 0 : prev + 1));\n  //       setIsAnimating(false);\n  //     }, 500); // Duration of the animation\n  //   }\n  // };\n\n  // const handlePrevious = () => {\n  //   if (!isAnimating) {\n  //     setIsAnimating(true);\n  //     setTimeout(() => {\n  //       setCurrentImage((prev) => (prev === 0 ? images.length - 1 : prev - 1));\n  //       setIsAnimating(false);\n  //     }, 500); // Duration of the animation\n  //   }\n  // };\n\n  const handleRecord = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop(); // Stop recording\n      setIsRecording(false);\n    } else {\n      // Request audio access from the user\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        chunks.current = [];\n\n        // Store the data in chunks\n        mediaRecorder.ondataavailable = e => {\n          chunks.current.push(e.data);\n        };\n\n        // When the recording stops\n        mediaRecorder.onstop = () => {\n          const blob = new Blob(chunks.current, {\n            type: \"audio/wav\"\n          });\n          // Send the audio blob to the API\n          sendAudioToAPI(blob);\n        };\n        mediaRecorder.start();\n        setIsRecording(true); // Update state to show that we are recording\n      });\n    }\n  };\n  const convertBlobToBase64 = blob => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1]; // Extract Base64 string without MIME type\n        resolve(base64String);\n      };\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(blob);\n    });\n  };\n  const decodeBase64Audio = base64String => {\n    if (base64String) {\n      const binaryString = atob(base64String);\n      const binaryLen = binaryString.length;\n      const bytes = new Uint8Array(binaryLen);\n      for (let i = 0; i < binaryLen; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      const blob = new Blob([bytes], {\n        type: 'audio/wav'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioSrc([...audioSrc, url]);\n    }\n  };\n  const handleStory = () => {\n    console.log(\"Hello\");\n  };\n  const submitRequest = () => {\n    if (inputText) {\n      axios.post(BASE_API + \"/gemini\", {\n        \"message\": String(inputText)\n      }).then(resGemi => {\n        setStoryText(resGemi.data);\n        axios.post(BASE_API + \"/lmnt\", {\n          \"message\": resGemi.data\n        }).then(resLMNT => {\n          for (let index = 0; index < resLMNT.data.length; index++) {\n            decodeBase64Audio(resLMNT.data[index]);\n          }\n          setreadyState(true);\n          handleStory();\n        }).catch(e => alert(e));\n      });\n    }\n  };\n\n  // Function to send the recorded audio blob to an API endpoint\n  const sendAudioToAPI = audioBlob => {\n    convertBlobToBase64(audioBlob).then(base64 => {\n      axios.post(BASE_API + \"/deepgram\", {\n        \"message\": base64\n      }).then(res => {\n        axios.post(BASE_API + \"/gemini\", {\n          \"message\": res.data\n        }).then(resGemi => {\n          setStoryText(resGemi.data);\n          axios.post(BASE_API + \"/lmnt\", {\n            \"message\": resGemi.data\n          }).then(resLMNT => {\n            decodeBase64Audio(resLMNT.data[0]); // Decode Base64 audio from response\n            alert(\"Story Generated\");\n          }).catch(e => alert(e));\n        });\n      });\n    });\n  };\n  const [text, setText] = useState('');\n  const fullText = 'Hi, Excited for Story'; // The full text to be typed\n  const typingSpeed = 100; // Speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      if (index < fullText.length) {\n        setText(prevText => prevText + fullText.charAt(index)); // Add one character at a time\n        index++;\n      } else {\n        clearInterval(intervalId); // Clear interval when done\n      }\n    }, typingSpeed);\n    return () => clearInterval(intervalId); // Clean up the interval on unmount\n  }, [fullText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [isMainVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-first_page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"typing-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greeting-page-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDF99\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Enter the story description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitRequest,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), !isMainVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pictures-containers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitRequest,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"L3heeS3nQxuBMXpoTk+43Rvgm2w=\");\n_c = App;\nexport default App;\n{/* <div className=\"app-container\">\n <header className=\"app-header\">\n  <h1>Welcome To Story World</h1>\n  <div className=\"input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Input text\"\n      value={inputText}\n      onChange={(e) => setInputText(e.target.value)}\n    />\n    <button className=\"mic-button\" onClick={handleRecord}>\n      {isRecording ? 'üéôÔ∏è' : 'üé§'} {/* Show different icon when recording */}\n//     </button>\n//     <button onClick={submitRequest}>Submit</button>\n//   </div>\n// </header>\n// <main className=\"app-main\">\n//   <div className=\"image-display-box\">\n\n//     <div className=\"main-page\">\n//       <div className={`image-display ${isAnimating ? 'animating' : ''}`}>\n//         <img\n//           className={`image ${isAnimating ? 'animating' : ''}`}\n//           src={images[currentImage]}\n//           alt=\"Carousel\"\n//         />\n//       </div>\n//       <div className=\"story-class\">\n//         {storyText}\n//       </div>\n//       <button className=\"prev-button\" onClick={handlePrevious}>\n//         &#10094;\n//       </button>\n//       <button className=\"next-button\" onClick={handleNext}>\n//         &#10095;\n//       </button>\n//     </div>\n//   </div>\n// </main>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","isVisible","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","currentImage","setCurrentImage","storyText","setStoryText","isAnimating","setIsAnimating","audioSrc","setAudioSrc","isRecording","setIsRecording","mediaRecorderRef","chunks","readyState","setreadyState","isMainVisible","setisMainVisible","images","intervalId","setInterval","prevImage","length","clearInterval","BASE_API","handleRecord","current","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","ondataavailable","e","push","data","onstop","blob","Blob","type","sendAudioToAPI","start","convertBlobToBase64","Promise","resolve","reject","reader","FileReader","onloadend","base64String","result","split","onerror","error","readAsDataURL","decodeBase64Audio","binaryString","atob","binaryLen","bytes","Uint8Array","i","charCodeAt","url","URL","createObjectURL","handleStory","console","log","submitRequest","post","String","resGemi","resLMNT","index","catch","alert","audioBlob","base64","res","text","setText","fullText","typingSpeed","prevText","charAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/jayjoshi/Desktop/CalHacks/uAgents/integrations/google-gemini/src/Forntend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport './css/homePage.css'\nimport { isVisible } from \"@testing-library/user-event/dist/utils\";\n\n\nconst App = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState(0);\n  const [storyText, setStoryText] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [audioSrc, setAudioSrc] = useState([]); // Store decoded audio URL\n  const [isRecording, setIsRecording] = useState(false); // Track if the mic is recording\n  const mediaRecorderRef = useRef(null);\n  const chunks = useRef([]); // To store audio data\n  const [readyState, setreadyState] = useState(false)\n  const [isMainVisible, setisMainVisible] = useState(true)\n\n\n  const images = [\n    '/images/7.png',\n    '/images/8.png',\n    '/images/9.png',\n  ];\n\n  useEffect(() => {\n    // Set up the interval to switch the image every 5 seconds (5000 ms)\n    const intervalId = setInterval(() => {\n      setCurrentImage((prevImage) => (prevImage + 1) % images.length);\n    }, 5000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n\n  const BASE_API = \"http://localhost:8000\"\n\n\n\n  // const handleNext = () => {\n  //   if (!isAnimating) {\n  //     setIsAnimating(true);\n  //     setTimeout(() => {\n  //       setCurrentImage((prev) => (prev === images.length - 1 ? 0 : prev + 1));\n  //       setIsAnimating(false);\n  //     }, 500); // Duration of the animation\n  //   }\n  // };\n\n  // const handlePrevious = () => {\n  //   if (!isAnimating) {\n  //     setIsAnimating(true);\n  //     setTimeout(() => {\n  //       setCurrentImage((prev) => (prev === 0 ? images.length - 1 : prev - 1));\n  //       setIsAnimating(false);\n  //     }, 500); // Duration of the animation\n  //   }\n  // };\n\n  const handleRecord = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop(); // Stop recording\n      setIsRecording(false);\n    } else {\n      // Request audio access from the user\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        chunks.current = [];\n\n        // Store the data in chunks\n        mediaRecorder.ondataavailable = (e) => {\n          chunks.current.push(e.data);\n        };\n\n        // When the recording stops\n        mediaRecorder.onstop = () => {\n          const blob = new Blob(chunks.current, { type: \"audio/wav\" });\n          // Send the audio blob to the API\n          sendAudioToAPI(blob);\n        };\n\n        mediaRecorder.start();\n        setIsRecording(true); // Update state to show that we are recording\n      });\n    }\n  };\n\n  const convertBlobToBase64 = (blob) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1]; // Extract Base64 string without MIME type\n        resolve(base64String);\n      };\n      reader.onerror = (error) => reject(error);\n      reader.readAsDataURL(blob);\n    });\n  };\n\n  const decodeBase64Audio = (base64String) => {\n    if (base64String) {\n      const binaryString = atob(base64String);\n      const binaryLen = binaryString.length;\n      const bytes = new Uint8Array(binaryLen);\n\n      for (let i = 0; i < binaryLen; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n\n\n      const blob = new Blob([bytes], { type: 'audio/wav' });\n\n\n      const url = URL.createObjectURL(blob);\n      setAudioSrc([...audioSrc, url]);\n    }\n  };\n\n  const handleStory = () => {\n    console.log(\"Hello\")\n  }\n\n  const submitRequest = () => {\n    if (inputText) {\n\n      axios.post(BASE_API + \"/gemini\", { \"message\": String(inputText) }).then((resGemi) => {\n        setStoryText(resGemi.data);\n        axios.post(BASE_API + \"/lmnt\", { \"message\": resGemi.data }).then((resLMNT) => {\n          for (let index = 0; index < resLMNT.data.length; index++) {\n            decodeBase64Audio(resLMNT.data[index]);\n          }\n\n          setreadyState(true)\n          handleStory()\n\n        }).catch(e => alert(e));\n\n      });\n    }\n\n  };\n\n  // Function to send the recorded audio blob to an API endpoint\n  const sendAudioToAPI = (audioBlob) => {\n    convertBlobToBase64(audioBlob).then((base64) => {\n      axios.post(BASE_API + \"/deepgram\", {\n        \"message\": base64\n      }).then((res) => {\n        axios.post(BASE_API + \"/gemini\", { \"message\": res.data }).then((resGemi) => {\n          setStoryText(resGemi.data);\n          axios.post(BASE_API + \"/lmnt\", { \"message\": resGemi.data }).then((resLMNT) => {\n            decodeBase64Audio(resLMNT.data[0]); // Decode Base64 audio from response\n            alert(\"Story Generated\");\n          }).catch(e => alert(e));\n        });\n      });\n    });\n  };\n  const [text, setText] = useState('');\n  const fullText = 'Hi, Excited for Story'; // The full text to be typed\n  const typingSpeed = 100; // Speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      if (index < fullText.length) {\n        setText((prevText) => prevText + fullText.charAt(index)); // Add one character at a time\n        index++;\n      } else {\n        clearInterval(intervalId); // Clear interval when done\n      }\n    }, typingSpeed);\n\n  \n\n    return () => clearInterval(intervalId); // Clean up the interval on unmount\n  }, [fullText]);\n\n  return (\n\n    <div className=\"home-page\">\n      {\n        isMainVisible &&\n        <div className=\"home-first_page\">\n          <div className=\"typing-container\">\n            <h1 className=\"typing-text\">{text}</h1>\n          </div>\n          <div className=\"greeting-page-container\">\n            <h1>üéôÔ∏è</h1>\n            <input type=\"text\" onChange={(e) => setInputText(e.target.value)} placeholder=\"Enter the story description\" />\n            <button onClick={submitRequest}>Submit</button>\n          </div>\n        </div>\n      }\n      {!isMainVisible &&\n      <div className=\"story-container\">\n      <div className=\"pictures-containers\">\n\n      </div>\n      <div className=\"text-container\">\n\n      </div>\n      <div className=\"input_section\">\n        <input type=\"text\" placeholder=\"Enter the Description\" />\n        <button onClick={submitRequest}>Submit</button>\n      </div>\n    </div>\n      }\n      \n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n{/* <div className=\"app-container\">\n<header className=\"app-header\">\n  <h1>Welcome To Story World</h1>\n  <div className=\"input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Input text\"\n      value={inputText}\n      onChange={(e) => setInputText(e.target.value)}\n    />\n    <button className=\"mic-button\" onClick={handleRecord}>\n      {isRecording ? 'üéôÔ∏è' : 'üé§'} {/* Show different icon when recording */}\n//     </button>\n//     <button onClick={submitRequest}>Submit</button>\n//   </div>\n// </header>\n// <main className=\"app-main\">\n//   <div className=\"image-display-box\">\n\n\n\n\n//     <div className=\"main-page\">\n//       <div className={`image-display ${isAnimating ? 'animating' : ''}`}>\n//         <img\n//           className={`image ${isAnimating ? 'animating' : ''}`}\n//           src={images[currentImage]}\n//           alt=\"Carousel\"\n//         />\n//       </div>\n//       <div className=\"story-class\">\n//         {storyText}\n//       </div>\n//       <button className=\"prev-button\" onClick={handlePrevious}>\n//         &#10094;\n//       </button>\n//       <button className=\"next-button\" onClick={handleNext}>\n//         &#10095;\n//       </button>\n//     </div>\n//   </div>\n// </main>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}